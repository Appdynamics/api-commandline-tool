action:
  title: Import/Export actions from an application
  description: Import or export all actions in the specified application to a JSON file.
  list:
    title: List actions.
    description: Provide an application id or name as parameter (-a).
    example: -a 15
    method: GET
    endpoint: /controller/restui/policy/getActionsListViewData/{{a:application}}
  export:
    title: Export actions.
    description: Provide an application id or name as parameter (-a).
    example: -a 15
    method: GET
    endpoint: /controller/actions/{{a:application}}
  import:
    title: Import actions.
    description: Provide an application id or name as parameter (-a) and a json string or a file (with @ as prefix) as parameter (-d)
    example: -a 15 -d @actions.json
    method: POST
    endpoint: /controller/actions/{{a:application}}
    form: file={{d:actions}}
  delete:
    Title: Delete actions.
    description: Provide an action id (-i) as parameter.
    method: POST
    endpoint: /controller/restui/policy/deleteActions
    payload: [{{i:action_id}}]
  create:
    Title: Create an action.
    description: Provide a json string or a file (with @ as prefix) as parameter (-d)
    example: -d @actions.json
    method: POST
    endpoint: /controller/restui/httpaction/createHttpRequestAction
    payload: {{d:actions}}
account:
  title: Account API
  description: Query the Account API
  my:
    title: Get details about the current account
    description: This command requires no further arguments.
    example:
    method: GET
    endpoint: /controller/api/accounts/myaccount
agents:
  title: Agents API
  description: List, Reset, Disable AppDynamics Agents
  list:
    title: List all agents of a specific type
    description: Provide a type as parameter (-t). Possible types are appserver, machine, cluster.
    method: POST
    endpoint: /controller/restui/agents/list/{{t:type}}
    payload: {\"requestFilter\":{\"queryParams\":{\"applicationAssociationType\":\"ALL\"},\"filters\":[]},\"resultColumns\":[],\"offset\":0,\"limit\":-1,\"searchFilters\":[],\"columnSorts\":[{\"column\":\"HOST_NAME\",\"direction\":\"ASC\"}]}
  ids:
    title: Get more details on agents of a specific type by providing their ids
    description: Provide a type as parameter (-t) and a comma separated list of ids (-i). Possible types are appserver, machine, cluster.
    method: POST
    example: -t appserver -i 1,2,3
    endpoint: /controller/restui/agents/list/{{t:type}}/ids
    payload: {\"requestFilter\":[{{i:ids}}],\"resultColumns\":[\"HOST_NAME\",\"AGENT_VERSION\",\"NODE_NAME\",\"COMPONENT_NAME\",\"APPLICATION_NAME\",\"DISABLED\",\"ALL_MONITORING_DISABLED\"],\"offset\":0,\"limit\":-1,\"searchFilters\":[],\"columnSorts\":[{\"column\":\"HOST_NAME\",\"direction\":\"ASC\"}]}
  disable:
    title: Disable an app agent by id
    description: Provide an agent id (-i) and the disableMonitoring (-m) flag (true/false) as parameter.
    method: POST
    example: -i 15 -m true
    endpoint: /controller/restui/agent/setting/disableAppServerAgentForNode/{{i:id}}?disableMonitoring={{m:disableMonitoring}}
  enable:
    title: Enable an app agent by id
    description: Provide an agent id (-i) as parameter.
    method: POST
    example: -i 15
    endpoint: /controller/restui/agent/setting/enableAppServerAgentForNode/{{i:id}}
  toggleMachineAgent:
    title: Enable or Disable an machine agent by id
    description: Provide an agent id (-i) and the enabled (-m) flag (true/false) as parameter.
    method: POST
    example: -i 15 -m false
    endpoint: /controller/restui/agent/setting/toggleMachineAgentEnable?enabledFlag={{m:enabledFlag}}&entityType=MACHINE_INSTANCE
    payload: [{{i:id}}]
application:
  title: Application Model API
  description: The applications API lets you retrieve information about the monitored environment as modeled in AppDynamics.
  get:
    title: Get an application.
    description: Provide an application id or name as parameter (-a).
    example: -a 15
    method: GET
    endpoint: /controller/rest/applications/{{a:application}}
  list:
    title: List all applications.
    description: This command requires no further arguments.
    example:
    method: GET
    endpoint: /controller/rest/applications
  create:
    title: Create a new application.
    description: Provide a name and a type (APM or WEB) as parameter.
    example: -t APM -n MyNewApplication
    method: POST
    endpoint: /controller/restui/allApplications/createApplication?applicationType={{t:application_type}}
    payload: {\"name\": \"{{n:application_name}}\", \"description\": \"{{d:application_description?}}\"}
  delete:
    title: Delete an application.
    description: Provide an application id as parameter (-a)
    example: -a 29
    method: POST
    endpoint: /controller/restui/allApplications/deleteApplication
    payload: {{a:application}}
  export:
    title: Export an application.
    description: Provide an application id as parameter (-a)
    example: -a 29
    method: GET
    endpoint: /controller/ConfigObjectImportExportServlet?applicationId={{a:application}}
  listdetails:
    title: List application details
    description: List application details including health. Provide application ids as parameter (-i), a start and end timestamp (-s and -e).
    example: -i 9326,8914 -s 1610389435 -e 1620389435
    method: POST
    endpoint: /controller/restui/v1/app/list/ids
    payload: {\"requestFilter\":[{{i:ids}}],\"timeRangeStart\":{{s:start}},\"timeRangeEnd\":{{e:end}},\"searchFilters\":null,\"columnSorts\":null,\"resultColumns\":[\"APP_OVERALL_HEALTH\",\"CALLS\",\"CALLS_PER_MINUTE\",\"AVERAGE_RESPONSE_TIME\",\"ERROR_PERCENT\",\"ERRORS\",\"ERRORS_PER_MINUTE\",\"NODE_HEALTH\",\"BT_HEALTH\"],\"offset\":0,\"limit\":-1} 
actiontemplate:
  title: Action Templates
  description: These commands allow you to import and export email/http action templates. A common use pattern is exporting the commands from one controller and importing into another. Please note that the export is a list of templates and the import expects a single object, so you need to split the json inbetween.
  createmediatype:
    title: Create a custom media type.
    description: Provide the name of the media type as parameter (-n)
    example: -n 'application/vnd.appd.events+json'
    method: POST
    endpoint: /controller/restui/httpaction/createHttpRequestActionMediaType
    payload: {\"name\":\"{{n:media_type_name}}\",\"builtIn\":false}
  export:
    title: Export all templates of a given type.
    description: Provide the type (-t email or httprequest) as parameter.
    example: -t httprequest
    method: GET
    endpoint: /controller/actiontemplate/{{t:action_template_type}}/
  exportHttpActionPlanList:
    title: Export the Http Action Plan List
    description: This command requires no further arguments.
    example:
    method: GET
    endpoint: /controller/restui/httpaction/getHttpRequestActionPlanList
alertingtemplate:
  title: Alerting Templates
  description: These commands allow you to list, import and export action templates.
  list:
    title: List all alerting templates
    description: This command requires no further arguments.
    example:
    method: GET
    endpoint: /controller/alerting/rest/v1/templates/details
  import:
    title: Import an alerting template
    description: Provide a json string or a file (with @ as prefix) as parameter (-d).
    example: -d examples/alertingTemplate.json
    method: POST
    endpoint: /controller/alerting/rest/v1/templates/import
    payload: {{d:alerting_template}}
  export:
    title: Export an alerting template
    description: Provide the id of the alerting template (-a) as parameter.
    example: -i 68
    method: POST
    endpoint: /controller/alerting/rest/v1/templates/{{a:alerting_template_id}}/export
  delete:
    title: Delete an alerting template
    description: Provide the id of the alerting template (-a) as parameter.
    example: -i 68
    method: DELETE
    endpoint: /controller/alerting/rest/v1/templates/{{a:alerting_template_id}}
adql:
  title: Run ADQL Queries
  description: These commands allow you to run ADQL queries agains the controller (not the event service!)
  query:
    title: Run an ADQL query
    description: Provide an adql query (-q), a start time (-s) and an end time (-e) as parameters. Remember to escape double quotes in the query.
    example: -q 'SELECT eventTimestamp FROM transactions LIMIT 1' -s 2022-06-05T00:00:00.000Z -e 2022-06-16T06:00:00.000Z
    method: POST
    endpoint: /controller/restui/analytics/adql/query
    payload: {\"requests\":[{\"query\":\"{{q:query}}\",\"label\":\"DataQuery\",\"customResponseRequest\":true,\"responseConverter\":\"UIGRID\",\"responseType\":\"ORDERED\",\"start\":\"{{s:start}}\",\"end\":\"{{e:end}}\",\"chunk\":false,\"mode\":\"page\",\"scrollId\":\"\",\"size\":\"50000\",\"offset\":\"0\",\"limit\":\"1000000\"}],\"start\":\"\",\"end\":\"\",\"chunk\":false,\"mode\":\"none\",\"scrollId\":\"\",\"size\":\"\",\"offset\":\"\",\"limit\":\"1000000\",\"chunkDelayMillis\":\"\",\"chunkBreakDelayMillis\":\"\",\"chunkBreakBytes\":\"\",\"others\":\"false\",\"emptyOnError\":\"false\",\"token\":\"\",\"dashboardId\":0,\"warRoomToken\":\"\",\"warRoom\":false}
analyticssearch:
  title: Saved Analytics Search
  description: These commands allow you to import and export email/http saved analytics searches.
  get:
    title: Get an analytics search by id.
    description: Provide the id as parameter (-i).
    example: -i 6
    method: GET
    endpoint: /controller/restui/analyticsSavedSearches/getAnalyticsSavedSearchById/{{i:analytics_search_id}}
  list:
    title: List all analytics searches.
    description: This command requires no further arguments.
    example:
    method: GET
    endpoint: /controller/restui/analyticsSavedSearches/getAllAnalyticsSavedSearches
  delete:
    title: Delete an analytics search by id.
    description: Provide the id as parameter (-i).
    example: -i 6
    method: POST
    endpoint: /controller/restui/analyticsSavedSearches/deleteAnalyticsSavedSearch/{{i:analytics_search_id}}
  import:
    title: Import an analytics search.
    description: Provide a json string or a file (with @ as prefix) as parameter (-d).
    example: -d search.json
    method: POST
    endpoint: /controller/restui/analyticsSavedSearches/createAnalyticsSavedSearch
    payload: {{d:analytics_search}}
analyticsmetric:
  title: Analytics metrics
  description: Manage custom analytics metrics
  create:
    title: Create analytics metric
    description: Provide an adql query (-q) and an event type (-e BROWSER_RECORD, BIZ_TXN) and a name (-n) as parameters. The description (-d) is optional.
    example: -q 'SELECT count(*) FROM browser_records' -e BROWSER_RECORD -n 'My Custom Metric'
    method: POST
    endpoint: /controller/restui/analyticsMetric/create
    payload: {\"adqlQueryString\":\"{{q:query}}\",\"eventType\":\"{{e:eventType}}\",\"enabled\":true,\"queryType\":\"ADQL_QUERY\",\"queryName\":\"{{n:queryname}}\",\"queryDescription\":\"{{d:querydescription?}}\"}
analyticsschema:
  title: Analytics Schemas
  description: These commands allow you to manage analytics schemas.
  list:
    title: List all analytics schemas.
    description: This command requires no further arguments
    example:
    method: GET
    endpoint: /controller/restui/analytics/schema
audit:
  title: Controller Audit History
  description: The Controller audit history is a record of the configuration and user activities in the Controller configuration.
  get:
    title: Get audit history.
    description: Provide a start time (-b) and an end time (-f) as parameter.
    example: -b 2015-12-19T10:50:03.607-700 -f 2015-12-19T17:50:03.607-0700
    method: GET
    endpoint: /controller/ControllerAuditHistory?startTime={{b:start_time}}&endTime={{f:end_time}}
backend:
  title: Backends in a Business Application
  description: Retrieve information about backends within a given business application
  list:
    title: List all backends.
    description: Provide the application id as parameter (-a)
    example: -a 29
    method: GET
    endpoint: /controller/rest/applications/{{a:application}}/backends
bizjourney:
  title: Business Journeyes
  description: Manage business journeys in AppDynamics Analytics
  list:
    title: List all business journeys.
    description: This command requires no further arguments.
    example:
    method: GET
    endpoint: /controller/restui/analytics/biz_outcome/definitions/summary
  enable:
    title: Enable a business journey.
    description: Provide the journey id (-i) as parameter.
    example: -i 6
    method: PUT
    endpoint: /controller/restui/analytics/biz_outcome/definitions/{{i:business_journey_id}}/actions/enable
  disable:
    title: Disable a business journey.
    description: Provide the journey id (-i) as parameter.
    example: -i 6
    method: PUT
    endpoint: /controller/restui/analytics/biz_outcome/definitions/{{i:business_journey_id}}/actions/userDisable
  import:
    title: Import a business journey.
    description: Provide a json string or a file (with @ as prefix) as parameter (-d)
    example: -d @journey.json
    method: POST
    endpoint: /controller/restui/analytics/biz_outcome/definitions/saveAsValidDraft
    payload: {{d:business_journey_draft}}
bt:
  title: Business Transactions in a Business Application
  description: Retrieve information about business transactions within a given business application
  get:
    title: Get a BT.
    description: Provide as parameters bt id (-b) and application id (-a).
    example: -a 29 -b 13
    method: GET
    endpoint: /controller/rest/applications/{{a:application}}/business-transactions/{{b:business_transaction}}
  list:
    title: List all BTs.
    description: Provide the application id as parameter (-a)
    example: -a 29
    method: GET
    endpoint: /controller/rest/applications/{{a:application}}/business-transactions
  delete:
    title: Delete a BT.
    description: Provide the bt id as parameter (-b)
    example: -b 13
    method: POST
    endpoint: /controller/restui/bt/deleteBTs
    payload: [{{b:business_transactions}}]
  rename:
    title: Rename a BT.
    description: Provide the bt id (-b) and the new name (-n) as parameters
    example: -b 13 -n Checkout
    method: POST
    endpoint: /controller/restui/v1/bt/renameBT?id={{b:business_transaction}}
    payload: {{n:business_transaction_name}}
  creategroup:
    title: Create a BT group.
    description: Provide the application id (-a), name (-n) and a comma separeted list of bt ids (-b)
    example: -b 13,14 -n MyGroup
    method: POST
    endpoint: /controller/restui/bt/createBusinessTransactionGroup?applicationId={{a:application}}&groupName={{n:business_transaction_group_name}}
    payload: [{{b:business_transactions}}]
configuration:
  title: Configuration API
  description: The configuration API enables you read and modify selected Controller configuration settings programmatically.
  get:
    title: Get a controller setting by name.
    description: Provide a name (-n) as parameter.
    example: -n metrics.min.retention.period
    method: GET
    endpoint: /controller/rest/configuration?name={{n:controller_setting_name}}
  list:
    title: List all controller settings
    description: The Controller global configuration values are made up of the Controller settings that are presented in the Administration Console.
    example:
    method: GET
    endpoint: /controller/rest/configuration
  set:
    title: Set a controller setting.
    description: Set a Controller setting to a specified value. Provide a name (-n) and a value (-v) as parameters
    example: -n metrics.min.retention.period -v 550
    method: POST
    endpoint: /controller/rest/configuration?name={{n:controller_setting_name}}&value={{v:controller_setting_value}}
controller:
  title: Controller Calls
  description: Basic calls against an AppDynamics controller.
  auth:
    title: Authenticate.
    description:
    example:
    method: GET
    endpoint: /controller/auth?action=login
  status:
    title: Get the server status.
    description: This command will return a XML containing status information about the controller.
    example:
    method: GET
    endpoint: /controller/rest/serverstatus
dbmon:
  title: Database Visibility API
  description: Use the Database Visibility API to get, create, update, and delete Database Visibility Collectors.
  list:
    title: List all collectors.
    description: No further arguments required.
    example:
    method: GET
    endpoint: /controller/rest/databases/collectors
  get:
    title: Get a specifc collector.
    description: Provide the collector id as parameter (-c).
    example: -c 17
    method: GET
    endpoint: /controller/rest/databases/collectors/{{c:database_collector}}
  update:
    title: Update a specific collector.
    description: Provide a json string or a @file (-d) as parameter.
    example: -d @collector.json
    method: POST
    endpoint: /controller/rest/databases/collectors/update
    payload: {{d:database_collector_update_definition}}
  delete:
    title: Delete multiple collectors.
    description: Provide a comma seperated list of collector analyticsSavedSearches
    example: -c 17,18
    method: POST
    endpoint: /controller/rest/databases/collectors/batchDelete
    payload: [{{c:database_collectors}}]
  import:
    title: Import a collector.
    description: Provide a json string or a @file (-d) as parameter.
    example: -d @collector.json
    method: POST
    endpoint: /controller/rest/databases/collectors/create
    payload: {{d:database_collector_definition}}
  servers:
    title: List all servers.
    description: No further arguments required.
    example:
    method: GET
    endpoint: /controller/rest/databases/servers
  queries:
    title: Get queries for a server.
    description: Requires a server id (-i), a start time (-b) and an end time (-f) as parameters.
    example: -i 2 -b 1545237000000 -f 1545238602
    method: POST
    endpoint: /controller/databasesui/databases/queryListData
    payload: {\"cluster\":false,\"serverId\":{{i:server_id}},\"field\":\"query-id\",\"size\":100,\"filterBy\":\"time\",\"startTime\":{{b:start_time}},\"endTime\":{{f:end_time}},\"waitStateIds\":[],\"useTimeBasedCorrelation\":false}
dashboard:
  title: Custom Dashboards
  description: Import and export custom dashboards in the AppDynamics controller
  list:
    title: List all dashboards.
    description: This command requires no further arguments.
    example:
    method: GET
    endpoint: /controller/restui/dashboards/getAllDashboardsByType/false
  export:
    title: Export a dashboard.
    description: Provide a dashboard id (-i) as parameter
    example: -i 2
    method: GET
    endpoint: /controller/CustomDashboardImportExportServlet?dashboardId={{i:dashboard_id}}
  delete:
    title: Delete a dashboard.
    description: Provide a dashboard id (-i) as parameter
    example: -i 2
    method: POST
    endpoint: /controller/restui/dashboards/deleteDashboards
    payload: [{{i:dashboard_id}}]
  update:
    title: Update a dashboard.
    description: Provide a dashboard file or json (-d) as parameter. Use the dashboard get command to retrieve the correct format for updating.
    example: -d @dashboardUpdate.json
    method: POST
    endpoint: /controller/restui/dashboards/updateDashboard
    payload: {{d:dashboard_definition}}
  import:
    title: Import a dashboard.
    description: Provide a dashboard file or json (-d) as parameter.
    example: -d @examples/dashboard.json
    method: POST
    endpoint: /controller/CustomDashboardImportExportServlet
    form: file={{d:dashboard}}
    expand: true
  get:
    title: Get a dashboard.
    description: Provide a dashboard id (-i) as parameter.
    example: -i 2
    method: GET
    endpoint: /controller/restui/dashboards/dashboardIfUpdated/{{i:dashboard_id}}/-1
event:
  title: Events
  description: Create and list events in your business applications.
  create:
    title: Create an event.
    description: Provide an application (-a), a summary (-s), an event type (-e) and a severity level (-l). Optional parameters are bt (-b), node (-n) and tier (-t)
    example: -l INFO -c 'New bug fix release.' -e APPLICATION_DEPLOYMENT -a 29 -s 'Version 3.1.3'
    method: POST
    endpoint: /controller/rest/applications/{{a:application}}/events?summary={{s:event_summary}}&comment={{c:event_comment?}}&eventtype={{e:event_type}}&severity={{l:event_severity}}&bt={{b:business_transaction?}}&node={{n:node?}}&tier={{t:tier?}}
flowmap:
  title: Flowmap
  description: Retrieve flowmaps
  application:
    title: Get an application flowmap
    description: Provide an application (-a) and a time range string (-t) as parameter.
    example: -a 41 -t last_1_hour.BEFORE_NOW.-1.-1.60
    method: GET
    endpoint: /controller/restui/applicationFlowMapUiService/application/{{a:application}}?time-range={{t:timerange}}&mapId=-1&baselineId=-1&forceFetch=false
  component:
    title: Get an component flowmap
    description: Provide an component (tier, node, ...) id (-c) and a time range string (-t) as parameter
    example: -c 108 -t last_1_hour.BEFOREW_NOW.-1.-1.60
    method: GET
    endpoint: /controller/restui/componentFlowMapUiService/component/{{c:component}}?time-range={{t:timerange}}&mapId=-1&baselineId=-1
federation:
  title: Federation
  description: Establish a federation between two AppDynamics Controllers.
  createkey:
    title: Create a key.
    description: Provide a name for the api key (-n) as parameter.
    example: -n saas2onprem
    method: POST
    endpoint: /controller/rest/federation/apikeyforfederation
    payload: {\"apiKeyName\": \"{{n:federation_api_key_name}}\"}
  establish:
    title: Establish a federation
    description: Provide an account name (-a), an api key (-k) and a controller url (-c) for the friend account.
    example: -a customer1 -k NGEzNzlhNTctNzQ1Yy00ZWM3LTkzNmItYTVkYmY0NWVkYzZjOjA0Nzk0ZjI5NzU1OWM0Zjk4YzYxN2E0Y2I2ODkwMDMyZjdjMDhhZTY= -c http://localhost:8090
    method: POST
    endpoint: /controller/rest/federation/establishmutualfriendship
    payload: {\"accountName\": \"{{controller_account}}\",\"controllerUrl\": \"{{controller_url}}\",\"friendAccountName\": \"{{a:federation_friend_account}}\", \"friendAccountApiKey\": \"{{k:federation_friend_api_key}}\", \"friendAccountControllerUrl\": \"{{c:federation_friend_controller_url}}\"}
healthrule:
  title: Health Rules
  description: Configure and retrieve health rules and their violates.
  list:
    title: List all healthrules.
    description: Provide an application (-a) as parameter
    example: -a 29
    method: GET
    endpoint: /controller/alerting/rest/v1/applications/{{a:application}}/health-rules
  get:
    title: Get a healthrule.
    description: Provide an application (-a) and a health rule name (-n) as parameters.
    example: -a 29
    method: GET
    endpoint: /controller/healthrules/{{a:application}}/?name={{n:healthrule_name?}}
  violations:
    title: Get all healthrule violations.
    description: Provide an application (-a) and a time range type (-t) as parameters, as well as a duration in minutes (-d) or a start-time (-b) and an end time (-f)
    example: -a 29 -t BEFORE_NOW -d 120
    method: GET
    endpoint: /controller/rest/applications/{{a:application}}/problems/healthrule-violations?time-range-type={{t:time_range_type}}&duration-in-mins={{d:duration_in_minutes?}}&start-time={{b:start_time?}}&end-time={{e:end_time?}}
  enable:
    title: Enable a healthrule.
    description:  Provide an application (-a) and a health rule id (-i) as parameters.
    example: -a 29 -i 54
    method: PUT
    endpoint: /controller/alerting/rest/v1/applications/{{a:application}}/health-rules/{{i:healthrule_id}}/configuration
    payload: {\"enabled\": \"true\"}
  disable:
    title: Disable a healthrule.
    description:  Provide an application (-a) and a health rule id (-i) as parameters.
    example: -a 29 -i 54
    method: PUT
    endpoint: /controller/alerting/rest/v1/applications/{{a:application}}/health-rules/{{i:healthrule_id}}/configuration
    payload: {\"enabled\": \"false\"}
licenserule:
  title: License Rules API
  list:
    title: List all license rules.
    description: This command requires no further arguments
    example:
    method: GET
    endpoint: /controller/mds/v1/license/rules
  create:
    title: Create a license rule.
    description: Provide a json string or a @file (-d) as parameter.
    example: -d examples/licenserule.json
    method: POST
    endpoint: /controller/mds/v1/license/rules
  detailview:
    title: Get detail view for a license rule
    description: Provide a license id (-l) as parameter.
    example: -l ff0fb8ff-d2ef-446d-83bd-8f8e5b8c0d20
    method: POST
    endpoint: /controller/restui/licenseRule/getApmLicenseRuleDetailViewData/{{l:licenserule}}
    payload: {\"type\":\"BEFORE_NOW\",\"durationInMinutes\":60}
logsources:
  title: Log Analytics Configuration
  descripion: API to manage log analytics sources
  list:
    title: List all sources.
    description: This command requires no further arguments.
    example:
    method: GET
    endpoint: /controller/restui/analytics/logsources
  import:
    title: Import a source rule.
    description: Provide a json string or a file (with @ as prefix) as parameter (-d)
    example: -d @examples/logsources.json
    method: POST
    endpoint: /controller/restui/analytics/logsources
    payload: payload: {{d:logsourcerule}}
mobileCrash:
  title: Mobile Crashes
  description: API to list and retrieve mobile crashes
  get:
    title: Get crash details
    description: Provide an application ID (-a) and crash ID (-c) as parameters
    example: -a 41 -c d65fff8f-6ff0-4765-8ff4-2ffcbd0441bd
    method: GET
    endpoint: /controller/restui/crashDetails/download/{{a:application}}/{{c:crash}}
node:
  title: Nodes
  description: Retrieve nodes within a business application
  list:
    title: List all nodes.
    description: Provide the application id as parameter (-a).
    example: -a 29
    method: GET
    endpoint: /controller/rest/applications/{{a:application}}/nodes
  get:
    title: Get a node.
    description: Provide the application (-a) and the node (-n) as parameters
    example: -a 29 -n 45
    method: GET
    endpoint: /controller/rest/applications/{{a:application}}/nodes/{{n:node}}
  markhistorical:
    title: Mark nodes as historical.
    description: Provide a comma separated list of node ids.
    example: -n 45,46
    method: POST
    endpoint: /controller/rest/mark-nodes-historical?application-component-node-ids={{n:nodes}}
  move:
    title: Move node.
    description: Provide a node id (-n) and a tier id (-t) to move the given node to the given tier.
    example: -n 1782418 -t 187811
    method: POST
    endpoint: /controller/restui/nodeUiService/moveNode/{{n:node}}/{{t:tier}}
otel:
  title: OpenTelemetry
  description: Configure OpenTelemetry collector for AppDynamics
  isEnabled:
    title: Check if OpenTelemetry enabled.
    description: No parameter required.
    example:
    method: GET
    endpoint: /controller/restui/otel/isOtelEnabled
  getApiKey:
    title: Get OpenTelemetry API Key
    description: No parameter required.
    example:
    method: GET
    endpoint: /controller/restui/otel/getOtelApiKey
policy:
  title: Policies API
  description: Import and export policies
  export:
    title: List all policies.
    description: Provide an application (-a) as parameter.
    example: -a 29
    method: GET
    endpoint: /controller/policies/{{a:application}}
  import:
    title: Import a policy.
    description: Provide an application (-a) and a policy file or json (-d) as parameter.
    example: -a 29 -d @examples/policy.json
    method: POST
    endpoint: /controller/policies/{{a:application}}
    form: file={{d:policy}}
sam:
  title: Service Availability Monitoring
  description: Manage service monitoring configurations
  get:
    title: Get a monitor.
    description: Provide a monitor id (-i) as parameter
    example: -i 29
    method: GET
    endpoint: /controller/sim/v2/user/sam/targets/http/{{i:monitorId}}
  delete:
    title: Delete a monitor
    description: Provide a monitor id (-i) as parameter
    example: -i 29
    method: DELETE
    endpoint: /controller/sim/v2/user/sam/targets/http/{{i:monitorId}}
  list:
    title: List monitors.
    description: This command requires no further arguments.
    example:
    method: GET
    endpoint: /controller/sim/v2/user/sam/targets/http
  create:
    title: Create a monitor.
    description: This command takes the following arguments. Those with '?' are optional: name (-n), machineId (-i), url (-u), interval (-i), failureThreshold (-f), successThreshold (-s), thresholdWindow (-w), connectTimeout (-c), socketTimeout (-t), method (-m), downloadSize (-d), headers (-h), body (-b), validationRules (-v)
    example: -n 'Checkout' -i 42 -u https://www.example.com/checkout -p 10 -f 1 -s 3 -w 5 -c 30000 -t 30000 -m POST -d 5000
    method: POST
    endpoint: /controller/sim/v2/user/sam/targets/http
    payload: {\"name\":\"{{n:name}}\",\"description\":\"\",\"protocol\":\"HTTP\",\"machineId\":{{i:machineId}},\"configs\":{\"target\":\"{{u:url}}\",\"pingIntervalSeconds\":{{p:pingInterval}},\"failureThreshold\":{{f:failureThreshold}},\"successThreshold\":{{s:successThreshold}},\"thresholdWindow\":{{w:thresholdWindow}},\"connectTimeoutMillis\":{{c:connectTimeout}},\"socketTimeoutMillis\":{{t:socketTimeout}},\"method\":\"{{m:method}}\",\"downloadSize\":{{d:downloadSize}},\"followRedirects\":true,\"headers\":[{{h:headers?}}],\"body\":\"{{b:body?}}\",\"validationRules\":[{{v:validationRules}}]}}
  import:
    title: Import a monitor.
    description: Provide a json string or a @file (-d) as parameter.
    example: -d @examples/sam.json
    method: POST
    endpoint: /controller/sim/v2/user/sam/targets/http
    payload: {{d:monitor_definition}}
scope:
  title: Scopes for Instrumentation
  description: Manage scopes for instrumentation
  list:
    title: List all scopes.
    description: Provide an application id (-a) as parameter
    example: -a 25
    method: GET
    endpoint: /controller/restui/transactionConfigProto/getScopes/{{a:application}}
  create:
    title: Create a new scope.
    description: Provide an application id (-a) as parameter
    example -a 25 -d @scope.json
    method: POST
    endpoint: /controller/restui/transactionConfigProto/createScope?applicationId={{a:application}}
    payload: {{d:scope_definition}}
sep:
  title: Service Endpoints
  description: List service endpoints
  config:
    title: List all SEP configurations.
    description: Provide an application id (-a).
    example: -a 29
    endpoint: /controller/api/accounts/{{i:accountid}}/applications/{{a:application}}/sep
  list:
    title: List all SEPs
    description: Provide an application id (-a), a start timestamp (-s) and an end timestamp (-e) as parameters.
    example: -a 29 -s 1610389435 -e 1620389435
    method: POST
    endpoint: /controller/restui/serviceEndpoint/list
    payload: {\"requestFilter\":{\"queryParams\":{\"applicationId\":{{a:application}},\"mode\":\"FILTER_EXCLUDED\"},\"searchText\":\"\",\"filters\":{\"type\":[],\"sepName\":[]}},\"columnSorts\":[{\"column\":\"NAME\",\"direction\":\"ASC\"}],\"timeRangeStart\":{{s:start}},\"timeRangeEnd\":{{e:end}}}
  delete:
    title: Delete SEPs
    description: Provide an id or an list of ids of service end points (-s) as parameter.
    example: -s 11705717,11705424
    method: POST
    endpoint: /controller/restui/serviceEndpoint/delete
    payload: [{{s:service_endpoints}}]
  updateConfig:
    title: Insert or Update SEPs.
    description: Provide an application id (-a) and a json string or a @file (-d) as parameter.
    example: -a 29 -d @examples/sep.json
    method: POST
    endpoint: /controller/api/accounts/{{i:accountid}}/applications/{{a:application}}/sep
    payload: {{d:sep_json}}
server:
  title: Server & Infrastructure Monitoring API
  description: List servers, their properties and metrics
  get:
    title: Get a machine.
    description: Provide a machine id (-m) as parameter.
    example: -m 244
    method: GET
    endpoint: /controller/sim/v2/user/machines/{{m:machine}}
  list:
    title: List all machines.
    description: No additional argument required.
    example:
    method: GET
    endpoint: /controller/sim/v2/user/machines
  delete:
    title: Delete a machine.
    description: Provide a machine id (-m) as parameter.
    example: -m 244
    method: DELETE
    endpoint: /controller/sim/v2/user/machines/deleteMachines?ids={{m:machine}}
  query:
    title: Query a machineagent by hostname
    description: provide a machine name (-m) as parameter
    example: -m Myserver or if you want to query your own name -m \\\${HOSTNAME} on Linux
    method: POST
    endpoint: /controller/sim/v2/user/machines/keys
    payload: {\"filter\":{\"appIds\":[],\"nodeIds\":[],\"tierIds\":[],\"types\":[\"PHYSICAL\",\"CONTAINER_AWARE\"],\"timeRangeStart\":0,\"timeRangeEnd\":0},\"search\":{\"query\":\"{{m:machine}}\"},\"sorter\":{\"field\":\"HEALTH\",\"direction\":\"ASC\"}}
snapshot:
  title: Snapshot API
  description: List APM snapshots.
  list:
    title: Retrieve a list of snapshots
    description: Provide an application (-a) as parameter, as well as a time range (-t), the duration in minutes (-d) or start (-b) and end time (-f)
    example: -a 29 -t BEFORE_NOW -d 120
    method: GET
    endpoint: /controller/rest/applications/{{a:application}}/request-snapshots?time-range-type={{t:time_range_type}}&duration-in-mins={{d:duration_in_minutes?}}&start-time={{b:start_time?}}&end-time={{f:end_time?}}&need-props=true&need-exit-calls=true
synthetic:
  title: Synthetic
  description: Create synthetic snapshots or jobs
  list:
    title: List all synthetic jobs.
    description: Provide an EUM application id (-a) as parameter.
    example: -a 41
    method: POST
    endpoint: /controller/restui/synthetic/schedule/getJobList/{{a:application}}
  import:
    title: Import a synthetic job.
    description: Provide an EUM application id (-a) as parameter and a json string or a file (with @ as prefix) as parameter (-d)
    example: -a 41 -d @examples/syntheticjob.json
    method: POST
    endpoint: /controller/restui/synthetic/schedule/{{a:application}}/updateSchedule
    payload: {{d:synthetic_job}}
    expand: true
  snapshot:
    title: Generate synthetic snapshot.
    description: Provide an EUM application (-a), a brower (-b) and an URL (-u) as parameter.
    example: -u http://www.appdynmics.com -l AMS -b Chrome -a 128
    method: POST
    endpoint: /controller/restui/synthetic/launch/generateLoad
    payload: {\"url\":\"{{u:url}}\",\"location\":\"{{l:location}}\",\"browser\":\"{{b:browser}}\",\"applicationId\":{{a:application}},\"timeRangeString\":null,\"timeoutSeconds\":30,\"script\":null}
  update:
    title: Update a synthetic job.
    description: Provide an EUM application id (-a) as parameter and a json string or a file (with @ as prefix) as parameter (-d)
    example: -a 41 -d @examples/updatesyntheticjob.json
    method: POST
    endpoint: /controller/restui/synthetic/schedule/{{a:application}}/updateScheduleBatch
    payload: {{d:synthetic_job}}
eumCorrelation:
  title: User Experience App Integration
  description: Manage correlation cookies for APM and EUM integration
  disable:
    title: Disable all EUM correlation cookies.
    example: -a 41
    method: POST
    endpoint: /controller/restui/configuration/userExperienceAppIntegration/businessTransactionEumCorrelation/saveConfiguration/{{a:application}}
    payload: {\"isEnabled\":false,\"includeRules\":[],\"excludeRules\":[],\"btHeaderInjectionForSafeAgentsEnabled\":false}
tier:
  title: Tiers
  description: List all tiers.
  list:
    title: List all tiers for a given application.
    description: Provide the application id as parameter (-a).
    example: -a 29
    method: GET
    endpoint: /controller/rest/applications/{{a:application}}/tiers
  get:
    title: Get a tier.
    description: Provide the application (-a) and the tier (-t) as parameters
    example: -a 29 -t 45
    method: GET
    endpoint: /controller/rest/applications/{{a:application}}/tiers/{{t:tier}}
  nodes:
    title: List nodes for a tier.
    description: Provide the application (-a) and the tier (-t) as parameters
    example: -a 29 -t 45
    method: GET
    endpoint: /controller/rest/applications/{{a:application}}/tiers/{{t:tier}}/nodes
transactiondetection:
  title: Transaction Detection Rules.
  description: Import and export transaction detection rules.
  export:
    title: Export transaction detection rules.
    description: Provide the application (-a) and the rule type (-r) as parameters. Provide an entry point type (-e) as optional parameter.
    example: -a 29 -r custom -e servlet
    method: GET
    endpoint: /controller/transactiondetection/{{a:application}}/{{r:ruletype}}/{{e:entrypointtype?}}
  import:
    title: Import transaction detection rules.
    description: Provide the application (-a), the rule type (-r) and an xml file (with @ as prefix) containing the rules (-d) as parameters. Provide an entry point type (-e) as optional parameter.
    example: -a 29 -r custom -e servlet -d @rules.xml
    method: POST
    endpoint: /controller/transactiondetection/{{a:application}}/{{r:ruletype}}/{{e:entrypointtype?}}
    form: file={{d:transaction_detection_rules}}
user:
  title: Users
  description: Create and Modify AppDynamics Users.
  create:
    title: Create a new user.
    description: Provide a name (-n), a display name (-d), a list of roles (-r), a password (-p) and a mail address (-m) as parameters.
    example: -n myadmin -d Administrator -r \"Account Administrator,Administrator\" -p ******** -m admin@localhost
    method: POST
    endpoint: /controller/rest/users?user-name={{n:user_name}}&user-display-name={{d:user_display_name}}&user-password={{p:user_password}}&user-email={{m:user_mail}}&user-roles={{r:user_roles?}}
  update:
    title: Update an existing user.
    description: Provide an id (-i), name (-n), a display name (-d), a list of roles (-r), a password (-p) and a mail address (-m) as parameters.
    example: -n myadmin -d Administrator -r \"Account Administrator,Administrator\" -p ******** -m admin@localhost
    method: POST
    endpoint: /controller/rest/users?user-id={{i:user_id}}&user-name={{n:user_name}}&user-display-name={{d:user_display_name}}&user-password={{p:user_password?}}&user-email={{m:user_mail}}&user-roles={{r:user_roles?}}
informationPoint:
  title: Information Points
  descripion: Retrieve, create and modify information points.
  list:
    title: List information points.
    description: Provide an application id (-a) and a time range string (-t) as parameters.
    example: -a 6743 -t last_1_hour.BEFORE_NOW.-1.-1.60
    method: GET
    endpoint: /controller/restui/informationPointUiService/getAllInfoPointsListViewData/{{a:application}}?time-range={{t:timerange}}
  create:
    title: Create an information point.
    description: Provide an json file (with @ as prefix) containing the information point config (-d) as parameter.
    example: -d @examples/information_point.json
    method: POST
    endpoint: /controller/restui/informationPointUiService/createInfoPointGathererConfig
    payload: {{d:infopoint_config}}
  update:
    title: Update an information point.
    description: Provide an json file (with @ as prefix) containing the information point update config (-d) as parameter.
    example: -d @examples/information_point_update.json
    method: POST
    endpoint: /controller/restui/informationPointUiService/updateInfoPointGathererConfig
    payload: {{d:infopoint_config}}
  delete:
    title: Delete information points.
    description: Provide an id or an list of ids of information points (-i) as parameter.
    example: -i 1326,1327
    method: POST
    endpoint: /controller/restui/informationPointUiService/deleteInformationPoints
    payload: [{{i:information_points}}]
