{"info": {"name": "AppDynamics API","schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"}, "auth": {"type": "basic","basic": [{"key": "password","value": "{{controller_password}}","type": "string"},{"key": "username","value": "{{controller_user}}@{{controller_account}}","type": "string"}]}, "event": [{"listen": "test","script": {"type": "text/javascript","exec": ["pm.globals.set(\"X-CSRF-TOKEN\", postman.getResponseCookie(\"X-CSRF-TOKEN\").value);"]}}],"item": [{"name": "account","item": [{
					"name": "Get details about the current account",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/api/accounts/myaccount",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","api","accounts","myaccount"],
              "query": []
						},
            "description": "This command requires no further arguments."
					}
				}]},{"name": "action","item": [{
					"name": "",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{{actions}}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/httpaction/createHttpRequestAction",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","httpaction","createHttpRequestAction"],
              "query": []
						},
            "description": "Provide a json string or a file (with @ as prefix) as parameter (-d)"
					}
				},{
					"name": "",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "[{{action_id}}]"
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/policy/deleteActions",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","policy","deleteActions"],
              "query": []
						},
            "description": "Provide an action id (-i) as parameter."
					}
				},{
					"name": "Export actions.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/actions/{{a:application}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","actions","{{application}}"],
              "query": []
						},
            "description": "Provide an application id or name as parameter (-a)."
					}
				},{
					"name": "Import actions.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/actions/{{a:application}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","actions","{{application}}"],
              "query": []
						},
            "description": "Provide an application id or name as parameter (-a) and a json string or a file (with @ as prefix) as parameter (-d)"
					}
				},{
					"name": "List actions.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/policy/getActionsListViewData/{{a:application}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","policy","getActionsListViewData","{{application}}"],
              "query": []
						},
            "description": "Provide an application id or name as parameter (-a)."
					}
				}]},{"name": "actiontemplate","item": [{
					"name": "Create a custom media type.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"{{media_type_name}}\",\"builtIn\":false}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/httpaction/createHttpRequestActionMediaType",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","httpaction","createHttpRequestActionMediaType"],
              "query": []
						},
            "description": "Provide the name of the media type as parameter (-n)"
					}
				},{
					"name": "Export all templates of a given type.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/actiontemplate/{{t:action_template_type}}/",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","actiontemplate","{{action_template_type}}",""],
              "query": []
						},
            "description": "Provide the type (-t email or httprequest) as parameter."
					}
				},{
					"name": "Export the Http Action Plan List",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/httpaction/getHttpRequestActionPlanList",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","httpaction","getHttpRequestActionPlanList"],
              "query": []
						},
            "description": "This command requires no further arguments."
					}
				}]},{"name": "adql","item": [{
					"name": "Run an ADQL query",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{\"requests\":[{\"query\":\"{{query}}\",\"label\":\"DataQuery\",\"customResponseRequest\":true,\"responseConverter\":\"UIGRID\",\"responseType\":\"ORDERED\",\"start\":\"{{start}}\",\"end\":\"{{end}}\",\"chunk\":false,\"mode\":\"page\",\"scrollId\":\"\",\"size\":\"50000\",\"offset\":\"0\",\"limit\":\"1000000\"}],\"start\":\"\",\"end\":\"\",\"chunk\":false,\"mode\":\"none\",\"scrollId\":\"\",\"size\":\"\",\"offset\":\"\",\"limit\":\"1000000\",\"chunkDelayMillis\":\"\",\"chunkBreakDelayMillis\":\"\",\"chunkBreakBytes\":\"\",\"others\":\"false\",\"emptyOnError\":\"false\",\"token\":\"\",\"dashboardId\":0,\"warRoomToken\":\"\",\"warRoom\":false}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/analytics/adql/query",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","analytics","adql","query"],
              "query": []
						},
            "description": "Provide an adql query (-q), a start time (-s) and an end time (-e) as parameters. Remember to escape double quotes in the query."
					}
				}]},{"name": "agents","item": [{
					"name": "Disable an app agent by id",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/agent/setting/disableAppServerAgentForNode/{{i:id}}?disableMonitoring={{m:disableMonitoring}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","agent","setting","disableAppServerAgentForNode","{{id}}"],
              "query": [{"key": "disableMonitoring","value": "{{disableMonitoring}}"}]
						},
            "description": "Provide an agent id (-i) and the disableMonitoring (-m) flag (true/false) as parameter."
					}
				},{
					"name": "Enable an app agent by id",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/agent/setting/enableAppServerAgentForNode/{{i:id}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","agent","setting","enableAppServerAgentForNode","{{id}}"],
              "query": []
						},
            "description": "Provide an agent id (-i) as parameter."
					}
				},{
					"name": "Get more details on agents of a specific type by providing their ids",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{\"requestFilter\":[{{ids}}],\"resultColumns\":[\"HOST_NAME\",\"AGENT_VERSION\",\"NODE_NAME\",\"COMPONENT_NAME\",\"APPLICATION_NAME\",\"DISABLED\",\"ALL_MONITORING_DISABLED\"],\"offset\":0,\"limit\":-1,\"searchFilters\":[],\"columnSorts\":[{\"column\":\"HOST_NAME\",\"direction\":\"ASC\"}]}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/agents/list/{{t:type}}/ids",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","agents","list","{{type}}","ids"],
              "query": []
						},
            "description": "Provide a type as parameter (-t) and a comma separated list of ids (-i). Possible types are appserver, machine, cluster."
					}
				},{
					"name": "List all agents of a specific type",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{\"requestFilter\":{\"queryParams\":{\"applicationAssociationType\":\"ALL\"},\"filters\":[]},\"resultColumns\":[],\"offset\":0,\"limit\":-1,\"searchFilters\":[],\"columnSorts\":[{\"column\":\"HOST_NAME\",\"direction\":\"ASC\"}]}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/agents/list/{{t:type}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","agents","list","{{type}}"],
              "query": []
						},
            "description": "Provide a type as parameter (-t). Possible types are appserver, machine, cluster."
					}
				},{
					"name": "Enable or Disable an machine agent by id",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "[{{id}}]"
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/agent/setting/toggleMachineAgentEnable?enabledFlag={{m:enabledFlag}}&entityType=MACHINE_INSTANCE",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","agent","setting","toggleMachineAgentEnable"],
              "query": [{"key": "enabledFlag","value": "{{enabledFlag}}"},{"key":"entityType","value": "MACHINE_INSTANCE"}]
						},
            "description": "Provide an agent id (-i) and the enabled (-m) flag (true/false) as parameter."
					}
				}]},{"name": "alertingtemplate","item": [{
					"name": "Delete an alerting template",
					"request": {
						"method": "DELETE",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/alerting/rest/v1/templates/{{a:alerting_template_id}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","alerting","rest","v1","templates","{{alerting_template_id}}"],
              "query": []
						},
            "description": "Provide the id of the alerting template (-a) as parameter."
					}
				},{
					"name": "Export an alerting template",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/alerting/rest/v1/templates/{{a:alerting_template_id}}/export",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","alerting","rest","v1","templates","{{alerting_template_id}}","export"],
              "query": []
						},
            "description": "Provide the id of the alerting template (-a) as parameter."
					}
				},{
					"name": "Import an alerting template",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{{alerting_template}}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/alerting/rest/v1/templates/import",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","alerting","rest","v1","templates","import"],
              "query": []
						},
            "description": "Provide a json string or a file (with @ as prefix) as parameter (-d)."
					}
				},{
					"name": "List all alerting templates",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/alerting/rest/v1/templates/details",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","alerting","rest","v1","templates","details"],
              "query": []
						},
            "description": "This command requires no further arguments."
					}
				}]},{"name": "analyticsmetric","item": [{
					"name": "Create analytics metric",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{\"adqlQueryString\":\"{{query}}\",\"eventType\":\"{{eventType}}\",\"enabled\":true,\"queryType\":\"ADQL_QUERY\",\"queryName\":\"{{queryname}}\",\"queryDescription\":\"{{querydescription}}\"}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/analyticsMetric/create",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","analyticsMetric","create"],
              "query": []
						},
            "description": "Provide an adql query (-q) and an event type (-e BROWSER_RECORD, BIZ_TXN) and a name (-n) as parameters. The description (-d) is optional."
					}
				},{
					"name": "List all analytics metrics",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/analyticsMetric/getAnalyticsScheduledQueryReports",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","analyticsMetric","getAnalyticsScheduledQueryReports"],
              "query": []
						},
            "description": ""
					}
				}]},{"name": "analyticsschema","item": [{
					"name": "List all analytics schemas.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/analytics/schema",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","analytics","schema"],
              "query": []
						},
            "description": "This command requires no further arguments"
					}
				}]},{"name": "analyticssearch","item": [{
					"name": "Delete an analytics search by id.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/analyticsSavedSearches/deleteAnalyticsSavedSearch/{{i:analytics_search_id}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","analyticsSavedSearches","deleteAnalyticsSavedSearch","{{analytics_search_id}}"],
              "query": []
						},
            "description": "Provide the id as parameter (-i)."
					}
				},{
					"name": "Get an analytics search by id.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/analyticsSavedSearches/getAnalyticsSavedSearchById/{{i:analytics_search_id}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","analyticsSavedSearches","getAnalyticsSavedSearchById","{{analytics_search_id}}"],
              "query": []
						},
            "description": "Provide the id as parameter (-i)."
					}
				},{
					"name": "Import an analytics search.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{{analytics_search}}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/analyticsSavedSearches/createAnalyticsSavedSearch",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","analyticsSavedSearches","createAnalyticsSavedSearch"],
              "query": []
						},
            "description": "Provide a json string or a file (with @ as prefix) as parameter (-d)."
					}
				},{
					"name": "List all analytics searches.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/analyticsSavedSearches/getAllAnalyticsSavedSearches",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","analyticsSavedSearches","getAllAnalyticsSavedSearches"],
              "query": []
						},
            "description": "This command requires no further arguments."
					}
				}]},{"name": "application","item": [{
					"name": "Create a new application.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{\"name\": \"{{application_name}}\", \"description\": \"{{application_description}}\"}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/allApplications/createApplication?applicationType={{t:application_type}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","allApplications","createApplication"],
              "query": [{"key": "applicationType","value": "{{application_type}}"}]
						},
            "description": "Provide a name and a type (APM or WEB) as parameter."
					}
				},{
					"name": "Delete an application.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{{application}}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/allApplications/deleteApplication",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","allApplications","deleteApplication"],
              "query": []
						},
            "description": "Provide an application id as parameter (-a)"
					}
				},{
					"name": "Export an application.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/ConfigObjectImportExportServlet?applicationId={{a:application}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","ConfigObjectImportExportServlet"],
              "query": [{"key": "applicationId","value": "{{application}}"}]
						},
            "description": "Provide an application id as parameter (-a)"
					}
				},{
					"name": "Get an application.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/rest/applications/{{a:application}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","rest","applications","{{application}}"],
              "query": []
						},
            "description": "Provide an application id or name as parameter (-a)."
					}
				},{
					"name": "List all applications.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/rest/applications",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","rest","applications"],
              "query": []
						},
            "description": "This command requires no further arguments."
					}
				},{
					"name": "List application details",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{\"requestFilter\":[{{ids}}],\"timeRangeStart\":{{start}},\"timeRangeEnd\":{{end}},\"searchFilters\":null,\"columnSorts\":null,\"resultColumns\":[\"APP_OVERALL_HEALTH\",\"CALLS\",\"CALLS_PER_MINUTE\",\"AVERAGE_RESPONSE_TIME\",\"ERROR_PERCENT\",\"ERRORS\",\"ERRORS_PER_MINUTE\",\"NODE_HEALTH\",\"BT_HEALTH\"],\"offset\":0,\"limit\":-1} "
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/v1/app/list/ids",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","v1","app","list","ids"],
              "query": []
						},
            "description": "List application details including health. Provide application ids as parameter (-i), a start and end timestamp (-s and -e)."
					}
				}]},{"name": "audit","item": [{
					"name": "Get audit history.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/ControllerAuditHistory?startTime={{b:start_time}}&endTime={{f:end_time}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","ControllerAuditHistory"],
              "query": [{"key": "startTime","value": "{{start_time}}"},{"key":"endTime","value": "{{end_time}}"}]
						},
            "description": "Provide a start time (-b) and an end time (-f) as parameter."
					}
				}]},{"name": "backend","item": [{
					"name": "List all backends.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/rest/applications/{{a:application}}/backends",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","rest","applications","{{application}}","backends"],
              "query": []
						},
            "description": "Provide the application id as parameter (-a)"
					}
				}]},{"name": "bizjourney","item": [{
					"name": "Disable a business journey.",
					"request": {
						"method": "PUT",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/analytics/biz_outcome/definitions/{{i:business_journey_id}}/actions/userDisable",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","analytics","biz_outcome","definitions","{{business_journey_id}}","actions","userDisable"],
              "query": []
						},
            "description": "Provide the journey id (-i) as parameter."
					}
				},{
					"name": "Enable a business journey.",
					"request": {
						"method": "PUT",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/analytics/biz_outcome/definitions/{{i:business_journey_id}}/actions/enable",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","analytics","biz_outcome","definitions","{{business_journey_id}}","actions","enable"],
              "query": []
						},
            "description": "Provide the journey id (-i) as parameter."
					}
				},{
					"name": "Import a business journey.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{{business_journey_draft}}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/analytics/biz_outcome/definitions/saveAsValidDraft",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","analytics","biz_outcome","definitions","saveAsValidDraft"],
              "query": []
						},
            "description": "Provide a json string or a file (with @ as prefix) as parameter (-d)"
					}
				},{
					"name": "List all business journeys.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/analytics/biz_outcome/definitions/summary",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","analytics","biz_outcome","definitions","summary"],
              "query": []
						},
            "description": "This command requires no further arguments."
					}
				}]},{"name": "bt","item": [{
					"name": "Create a BT group.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "[{{business_transactions}}]"
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/bt/createBusinessTransactionGroup?applicationId={{a:application}}&groupName={{n:business_transaction_group_name}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","bt","createBusinessTransactionGroup"],
              "query": [{"key": "applicationId","value": "{{application}}"},{"key":"groupName","value": "{{business_transaction_group_name}}"}]
						},
            "description": "Provide the application id (-a), name (-n) and a comma separeted list of bt ids (-b)"
					}
				},{
					"name": "Delete a BT.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "[{{business_transactions}}]"
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/bt/deleteBTs",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","bt","deleteBTs"],
              "query": []
						},
            "description": "Provide the bt id as parameter (-b)"
					}
				},{
					"name": "Get a BT.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/rest/applications/{{a:application}}/business-transactions/{{b:business_transaction}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","rest","applications","{{application}}","business-transactions","{{business_transaction}}"],
              "query": []
						},
            "description": "Provide as parameters bt id (-b) and application id (-a)."
					}
				},{
					"name": "List all BTs.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/rest/applications/{{a:application}}/business-transactions",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","rest","applications","{{application}}","business-transactions"],
              "query": []
						},
            "description": "Provide the application id as parameter (-a)"
					}
				},{
					"name": "Get the overflow traffic for a given component.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{\"componentId\":{{component_id}},\"timeRangeSpecifier\":{\"type\":\"BEFORE_NOW\",\"durationInMinutes\":{{duration_in_minutes}}},\"endEventId\":0,\"currentFetchedEventCount\":0}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/overflowtraffic/event",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","overflowtraffic","event"],
              "query": []
						},
            "description": "Provide a component id (-c) and a duration in minutes for a time range (-d) as parameters."
					}
				},{
					"name": "Rename a BT.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{{business_transaction_name}}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/v1/bt/renameBT?id={{b:business_transaction}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","v1","bt","renameBT"],
              "query": [{"key": "id","value": "{{business_transaction}}"}]
						},
            "description": "Provide the bt id (-b) and the new name (-n) as parameters"
					}
				}]},{"name": "configuration","item": [{
					"name": "Get a controller setting by name.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/rest/configuration?name={{n:controller_setting_name}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","rest","configuration"],
              "query": [{"key": "name","value": "{{controller_setting_name}}"}]
						},
            "description": "Provide a name (-n) as parameter."
					}
				},{
					"name": "List all controller settings",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/rest/configuration",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","rest","configuration"],
              "query": []
						},
            "description": "The Controller global configuration values are made up of the Controller settings that are presented in the Administration Console."
					}
				},{
					"name": "Set a controller setting.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/rest/configuration?name={{n:controller_setting_name}}&value={{v:controller_setting_value}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","rest","configuration"],
              "query": [{"key": "name","value": "{{controller_setting_name}}"},{"key":"value","value": "{{controller_setting_value}}"}]
						},
            "description": "Set a Controller setting to a specified value. Provide a name (-n) and a value (-v) as parameters"
					}
				}]},{"name": "controller","item": [{
					"name": "Authenticate.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/auth?action=login",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","auth"],
              "query": [{"key": "action","value": "login"}]
						},
            "description": ""
					}
				},{
					"name": "Get the server status.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/rest/serverstatus",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","rest","serverstatus"],
              "query": []
						},
            "description": "This command will return a XML containing status information about the controller."
					}
				}]},{"name": "dashboard","item": [{
					"name": "Delete a dashboard.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "[{{dashboard_id}}]"
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/dashboards/deleteDashboards",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","dashboards","deleteDashboards"],
              "query": []
						},
            "description": "Provide a dashboard id (-i) as parameter"
					}
				},{
					"name": "Export a dashboard.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/CustomDashboardImportExportServlet?dashboardId={{i:dashboard_id}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","CustomDashboardImportExportServlet"],
              "query": [{"key": "dashboardId","value": "{{dashboard_id}}"}]
						},
            "description": "Provide a dashboard id (-i) as parameter"
					}
				},{
					"name": "Get a dashboard.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/dashboards/dashboardIfUpdated/{{i:dashboard_id}}/-1",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","dashboards","dashboardIfUpdated","{{dashboard_id}}","-1"],
              "query": []
						},
            "description": "Provide a dashboard id (-i) as parameter."
					}
				},{
					"name": "Import a dashboard.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/CustomDashboardImportExportServlet",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","CustomDashboardImportExportServlet"],
              "query": []
						},
            "description": "Provide a dashboard file or json (-d) as parameter."
					}
				},{
					"name": "List all dashboards.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/dashboards/getAllDashboardsByType/false",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","dashboards","getAllDashboardsByType","false"],
              "query": []
						},
            "description": "This command requires no further arguments."
					}
				},{
					"name": "Update a dashboard.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{{dashboard_definition}}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/dashboards/updateDashboard",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","dashboards","updateDashboard"],
              "query": []
						},
            "description": "Provide a dashboard file or json (-d) as parameter. Use the dashboard get command to retrieve the correct format for updating."
					}
				}]},{"name": "dbmon","item": [{
					"name": "Delete multiple collectors.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "[{{database_collectors}}]"
						},
						"url": {
							"raw": "{{controller_host}}/controller/rest/databases/collectors/batchDelete",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","rest","databases","collectors","batchDelete"],
              "query": []
						},
            "description": "Provide a comma seperated list of collector analyticsSavedSearches"
					}
				},{
					"name": "Get a specifc collector.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/rest/databases/collectors/{{c:database_collector}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","rest","databases","collectors","{{database_collector}}"],
              "query": []
						},
            "description": "Provide the collector id as parameter (-c)."
					}
				},{
					"name": "Import a collector.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{{database_collector_definition}}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/rest/databases/collectors/create",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","rest","databases","collectors","create"],
              "query": []
						},
            "description": "Provide a json string or a @file (-d) as parameter."
					}
				},{
					"name": "List all collectors.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/rest/databases/collectors",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","rest","databases","collectors"],
              "query": []
						},
            "description": "No further arguments required."
					}
				},{
					"name": "Get queries for a server.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{\"cluster\":false,\"serverId\":{{server_id}},\"field\":\"query-id\",\"size\":100,\"filterBy\":\"time\",\"startTime\":{{start_time}},\"endTime\":{{end_time}},\"waitStateIds\":[],\"useTimeBasedCorrelation\":false}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/databasesui/databases/queryListData",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","databasesui","databases","queryListData"],
              "query": []
						},
            "description": "Requires a server id (-i), a start time (-b) and an end time (-f) as parameters."
					}
				},{
					"name": "List all servers.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/rest/databases/servers",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","rest","databases","servers"],
              "query": []
						},
            "description": "No further arguments required."
					}
				},{
					"name": "Update a specific collector.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{{database_collector_update_definition}}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/rest/databases/collectors/update",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","rest","databases","collectors","update"],
              "query": []
						},
            "description": "Provide a json string or a @file (-d) as parameter."
					}
				}]},{"name": "eumCorrelation","item": [{
					"name": "Disable all EUM correlation cookies.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{\"isEnabled\":false,\"includeRules\":[],\"excludeRules\":[],\"btHeaderInjectionForSafeAgentsEnabled\":false}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/configuration/userExperienceAppIntegration/businessTransactionEumCorrelation/saveConfiguration/{{a:application}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","configuration","userExperienceAppIntegration","businessTransactionEumCorrelation","saveConfiguration","{{application}}"],
              "query": []
						},
            "description": ""
					}
				}]},{"name": "event","item": [{
					"name": "Create an event.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/rest/applications/{{a:application}}/events?summary={{s:event_summary}}&comment={{c:event_comment?}}&eventtype={{e:event_type}}&severity={{l:event_severity}}&bt={{b:business_transaction?}}&node={{n:node?}}&tier={{t:tier?}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","rest","applications","{{application}}","events"],
              "query": [{"key": "summary","value": "{{event_summary}}"},{"key":"comment","value": "{{event_comment}}"},{"key":"eventtype","value": "{{event_type}}"},{"key":"severity","value": "{{event_severity}}"},{"key":"bt","value": "{{business_transaction}}"},{"key":"node","value": "{{node}}"},{"key":"tier","value": "{{tier}}"}]
						},
            "description": "Provide an application (-a), a summary (-s), an event type (-e) and a severity level (-l). Optional parameters are bt (-b), node (-n) and tier (-t)"
					}
				}]},{"name": "federation","item": [{
					"name": "Create a key.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{\"apiKeyName\": \"{{federation_api_key_name}}\"}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/rest/federation/apikeyforfederation",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","rest","federation","apikeyforfederation"],
              "query": []
						},
            "description": "Provide a name for the api key (-n) as parameter."
					}
				},{
					"name": "Establish a federation",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{\"accountName\": \"{{controller_account}}\",\"controllerUrl\": \"{{controller_url}}\",\"friendAccountName\": \"{{federation_friend_account}}\", \"friendAccountApiKey\": \"{{federation_friend_api_key}}\", \"friendAccountControllerUrl\": \"{{federation_friend_controller_url}}\"}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/rest/federation/establishmutualfriendship",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","rest","federation","establishmutualfriendship"],
              "query": []
						},
            "description": "Provide an account name (-a), an api key (-k) and a controller url (-c) for the friend account."
					}
				}]},{"name": "flowmap","item": [{
					"name": "Get an application flowmap",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/applicationFlowMapUiService/application/{{a:application}}?time-range={{t:timerange}}&mapId=-1&baselineId=-1&forceFetch=false",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","applicationFlowMapUiService","application","{{application}}"],
              "query": [{"key": "time-range","value": "{{timerange}}"},{"key":"mapId","value": "-1"},{"key":"baselineId","value": "-1"},{"key":"forceFetch","value": "false"}]
						},
            "description": "Provide an application (-a) and a time range string (-t) as parameter."
					}
				},{
					"name": "Get an component flowmap",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/componentFlowMapUiService/component/{{c:component}}?time-range={{t:timerange}}&mapId=-1&baselineId=-1",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","componentFlowMapUiService","component","{{component}}"],
              "query": [{"key": "time-range","value": "{{timerange}}"},{"key":"mapId","value": "-1"},{"key":"baselineId","value": "-1"}]
						},
            "description": "Provide an component (tier, node, ...) id (-c) and a time range string (-t) as parameter"
					}
				}]},{"name": "healthrule","item": [{
					"name": "Disable a healthrule.",
					"request": {
						"method": "PUT",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{\"enabled\": \"false\"}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/alerting/rest/v1/applications/{{a:application}}/health-rules/{{i:healthrule_id}}/configuration",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","alerting","rest","v1","applications","{{application}}","health-rules","{{healthrule_id}}","configuration"],
              "query": []
						},
            "description": "Provide an application (-a) and a health rule id (-i) as parameters."
					}
				},{
					"name": "Enable a healthrule.",
					"request": {
						"method": "PUT",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{\"enabled\": \"true\"}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/alerting/rest/v1/applications/{{a:application}}/health-rules/{{i:healthrule_id}}/configuration",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","alerting","rest","v1","applications","{{application}}","health-rules","{{healthrule_id}}","configuration"],
              "query": []
						},
            "description": "Provide an application (-a) and a health rule id (-i) as parameters."
					}
				},{
					"name": "Get a healthrule.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/healthrules/{{a:application}}/?name={{n:healthrule_name?}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","healthrules","{{application}}",""],
              "query": [{"key": "name","value": "{{healthrule_name}}"}]
						},
            "description": "Provide an application (-a) and a health rule name (-n) as parameters."
					}
				},{
					"name": "List all healthrules.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/alerting/rest/v1/applications/{{a:application}}/health-rules",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","alerting","rest","v1","applications","{{application}}","health-rules"],
              "query": []
						},
            "description": "Provide an application (-a) as parameter"
					}
				},{
					"name": "Get all healthrule violations.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/rest/applications/{{a:application}}/problems/healthrule-violations?time-range-type={{t:time_range_type}}&duration-in-mins={{d:duration_in_minutes?}}&start-time={{b:start_time?}}&end-time={{e:end_time?}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","rest","applications","{{application}}","problems","healthrule-violations"],
              "query": [{"key": "time-range-type","value": "{{time_range_type}}"},{"key":"duration-in-mins","value": "{{duration_in_minutes}}"},{"key":"start-time","value": "{{start_time}}"},{"key":"end-time","value": "{{end_time}}"}]
						},
            "description": "Provide an application (-a) and a time range type (-t) as parameters, as well as a duration in minutes (-d) or a start-time (-b) and an end time (-f)"
					}
				}]},{"name": "informationPoint","item": [{
					"name": "Create an information point.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{{infopoint_config}}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/informationPointUiService/createInfoPointGathererConfig",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","informationPointUiService","createInfoPointGathererConfig"],
              "query": []
						},
            "description": "Provide an json file (with @ as prefix) containing the information point config (-d) as parameter."
					}
				},{
					"name": "Delete information points.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "[{{information_points}}]"
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/informationPointUiService/deleteInformationPoints",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","informationPointUiService","deleteInformationPoints"],
              "query": []
						},
            "description": "Provide an id or an list of ids of information points (-i) as parameter."
					}
				},{
					"name": "List information points.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/informationPointUiService/getAllInfoPointsListViewData/{{a:application}}?time-range={{t:timerange}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","informationPointUiService","getAllInfoPointsListViewData","{{application}}"],
              "query": [{"key": "time-range","value": "{{timerange}}"}]
						},
            "description": "Provide an application id (-a) and a time range string (-t) as parameters."
					}
				},{
					"name": "Update an information point.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{{infopoint_config}}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/informationPointUiService/updateInfoPointGathererConfig",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","informationPointUiService","updateInfoPointGathererConfig"],
              "query": []
						},
            "description": "Provide an json file (with @ as prefix) containing the information point update config (-d) as parameter."
					}
				}]},{"name": "licenserule","item": [{
					"name": "Create a license rule.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/mds/v1/license/rules",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","mds","v1","license","rules"],
              "query": []
						},
            "description": "Provide a json string or a @file (-d) as parameter."
					}
				},{
					"name": "Get detail view for a license rule",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{\"type\":\"BEFORE_NOW\",\"durationInMinutes\":60}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/licenseRule/getApmLicenseRuleDetailViewData/{{l:licenserule}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","licenseRule","getApmLicenseRuleDetailViewData","{{licenserule}}"],
              "query": []
						},
            "description": "Provide a license id (-l) as parameter."
					}
				},{
					"name": "List all license rules.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/mds/v1/license/rules",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","mds","v1","license","rules"],
              "query": []
						},
            "description": "This command requires no further arguments"
					}
				}]},{"name": "logsources","item": [{
					"name": "Import a source rule.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "payload: {{logsourcerule}}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/analytics/logsources",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","analytics","logsources"],
              "query": []
						},
            "description": "Provide a json string or a file (with @ as prefix) as parameter (-d)"
					}
				},{
					"name": "List all sources.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/analytics/logsources",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","analytics","logsources"],
              "query": []
						},
            "description": "This command requires no further arguments."
					}
				}]},{"name": "mobileCrash","item": [{
					"name": "Get crash details",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/crashDetails/download/{{a:application}}/{{c:crash}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","crashDetails","download","{{application}}","{{crash}}"],
              "query": []
						},
            "description": "Provide an application ID (-a) and crash ID (-c) as parameters"
					}
				}]},{"name": "node","item": [{
					"name": "Get a node.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/rest/applications/{{a:application}}/nodes/{{n:node}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","rest","applications","{{application}}","nodes","{{node}}"],
              "query": []
						},
            "description": "Provide the application (-a) and the node (-n) as parameters"
					}
				},{
					"name": "List all nodes.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/rest/applications/{{a:application}}/nodes",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","rest","applications","{{application}}","nodes"],
              "query": []
						},
            "description": "Provide the application id as parameter (-a)."
					}
				},{
					"name": "Mark nodes as historical.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/rest/mark-nodes-historical?application-component-node-ids={{n:nodes}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","rest","mark-nodes-historical"],
              "query": [{"key": "application-component-node-ids","value": "{{nodes}}"}]
						},
            "description": "Provide a comma separated list of node ids."
					}
				},{
					"name": "Move node.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/nodeUiService/moveNode/{{n:node}}/{{t:tier}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","nodeUiService","moveNode","{{node}}","{{tier}}"],
              "query": []
						},
            "description": "Provide a node id (-n) and a tier id (-t) to move the given node to the given tier."
					}
				}]},{"name": "otel","item": [{
					"name": "Get OpenTelemetry API Key",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/otel/getOtelApiKey",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","otel","getOtelApiKey"],
              "query": []
						},
            "description": "No parameter required."
					}
				},{
					"name": "Check if OpenTelemetry enabled.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/otel/isOtelEnabled",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","otel","isOtelEnabled"],
              "query": []
						},
            "description": "No parameter required."
					}
				}]},{"name": "policy","item": [{
					"name": "List all policies.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/policies/{{a:application}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","policies","{{application}}"],
              "query": []
						},
            "description": "Provide an application (-a) as parameter."
					}
				},{
					"name": "Get a policy.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/event_reactor/getAllEventReactorsForApplication/{{p:policy}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","event_reactor","getAllEventReactorsForApplication","{{policy}}"],
              "query": []
						},
            "description": "Provide a policy id (-p) as parameter."
					}
				},{
					"name": "Import a policy.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/policies/{{a:application}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","policies","{{application}}"],
              "query": []
						},
            "description": "Provide an application (-a) and a policy file or json (-d) as parameter."
					}
				},{
					"name": "Update an existing policy.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{{policy}}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/event_reactor/update",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","event_reactor","update"],
              "query": []
						},
            "description": "Provide a policy file or json (-d) as parameter."
					}
				}]},{"name": "sam","item": [{
					"name": "Create a monitor.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"{{name}}\",\"description\":\"\",\"protocol\":\"HTTP\",\"machineId\":{{machineId}},\"configs\":{\"target\":\"{{url}}\",\"pingIntervalSeconds\":{{pingInterval}},\"failureThreshold\":{{failureThreshold}},\"successThreshold\":{{successThreshold}},\"thresholdWindow\":{{thresholdWindow}},\"connectTimeoutMillis\":{{connectTimeout}},\"socketTimeoutMillis\":{{socketTimeout}},\"method\":\"{{method}}\",\"downloadSize\":{{downloadSize}},\"followRedirects\":true,\"headers\":[{{headers}}],\"body\":\"{{body}}\",\"validationRules\":[{{validationRules}}]}}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/sim/v2/user/sam/targets/http",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","sim","v2","user","sam","targets","http"],
              "query": []
						},
            "description": "This command takes the following arguments. Those with '?' are optional: name (-n), machineId (-i), url (-u), interval (-i), failureThreshold (-f), successThreshold (-s), thresholdWindow (-w), connectTimeout (-c), socketTimeout (-t), method (-m), downloadSize (-d), headers (-h), body (-b), validationRules (-v)"
					}
				},{
					"name": "Delete a monitor",
					"request": {
						"method": "DELETE",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/sim/v2/user/sam/targets/http/{{i:monitorId}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","sim","v2","user","sam","targets","http","{{monitorId}}"],
              "query": []
						},
            "description": "Provide a monitor id (-i) as parameter"
					}
				},{
					"name": "Get a monitor.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/sim/v2/user/sam/targets/http/{{i:monitorId}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","sim","v2","user","sam","targets","http","{{monitorId}}"],
              "query": []
						},
            "description": "Provide a monitor id (-i) as parameter"
					}
				},{
					"name": "Import a monitor.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{{monitor_definition}}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/sim/v2/user/sam/targets/http",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","sim","v2","user","sam","targets","http"],
              "query": []
						},
            "description": "Provide a json string or a @file (-d) as parameter."
					}
				},{
					"name": "List monitors.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/sim/v2/user/sam/targets/http",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","sim","v2","user","sam","targets","http"],
              "query": []
						},
            "description": "This command requires no further arguments."
					}
				}]},{"name": "scope","item": [{
					"name": "Create a new scope.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{{scope_definition}}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/transactionConfigProto/createScope?applicationId={{a:application}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","transactionConfigProto","createScope"],
              "query": [{"key": "applicationId","value": "{{application}}"}]
						},
            "description": "Provide an application id (-a) as parameter"
					}
				},{
					"name": "List all scopes.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/transactionConfigProto/getScopes/{{a:application}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","transactionConfigProto","getScopes","{{application}}"],
              "query": []
						},
            "description": "Provide an application id (-a) as parameter"
					}
				}]},{"name": "sep","item": [{
					"name": "List all SEP configurations.",
					"request": {
						"method": "",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/api/accounts/{{i:accountid}}/applications/{{a:application}}/sep",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","api","accounts","{{accountid}}","applications","{{application}}","sep"],
              "query": []
						},
            "description": "Provide an application id (-a)."
					}
				},{
					"name": "Delete SEPs",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "[{{service_endpoints}}]"
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/serviceEndpoint/delete",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","serviceEndpoint","delete"],
              "query": []
						},
            "description": "Provide an id or an list of ids of service end points (-s) as parameter."
					}
				},{
					"name": "List all SEPs",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{\"requestFilter\":{\"queryParams\":{\"applicationId\":{{application}},\"mode\":\"FILTER_EXCLUDED\"},\"searchText\":\"\",\"filters\":{\"type\":[],\"sepName\":[]}},\"columnSorts\":[{\"column\":\"NAME\",\"direction\":\"ASC\"}],\"timeRangeStart\":{{start}},\"timeRangeEnd\":{{end}}}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/serviceEndpoint/list",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","serviceEndpoint","list"],
              "query": []
						},
            "description": "Provide an application id (-a), a start timestamp (-s) and an end timestamp (-e) as parameters."
					}
				},{
					"name": "Insert or Update SEPs.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{{sep_json}}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/api/accounts/{{i:accountid}}/applications/{{a:application}}/sep",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","api","accounts","{{accountid}}","applications","{{application}}","sep"],
              "query": []
						},
            "description": "Provide an application id (-a) and a json string or a @file (-d) as parameter."
					}
				}]},{"name": "server","item": [{
					"name": "Delete a machine.",
					"request": {
						"method": "DELETE",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/sim/v2/user/machines/deleteMachines?ids={{m:machine}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","sim","v2","user","machines","deleteMachines"],
              "query": [{"key": "ids","value": "{{machine}}"}]
						},
            "description": "Provide a machine id (-m) as parameter."
					}
				},{
					"name": "Get a machine.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/sim/v2/user/machines/{{m:machine}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","sim","v2","user","machines","{{machine}}"],
              "query": []
						},
            "description": "Provide a machine id (-m) as parameter."
					}
				},{
					"name": "List all machines.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/sim/v2/user/machines",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","sim","v2","user","machines"],
              "query": []
						},
            "description": "No additional argument required."
					}
				},{
					"name": "Query a machineagent by hostname",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{\"filter\":{\"appIds\":[],\"nodeIds\":[],\"tierIds\":[],\"types\":[\"PHYSICAL\",\"CONTAINER_AWARE\"],\"timeRangeStart\":0,\"timeRangeEnd\":0},\"search\":{\"query\":\"{{machine}}\"},\"sorter\":{\"field\":\"HEALTH\",\"direction\":\"ASC\"}}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/sim/v2/user/machines/keys",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","sim","v2","user","machines","keys"],
              "query": []
						},
            "description": "provide a machine name (-m) as parameter"
					}
				}]},{"name": "snapshot","item": [{
					"name": "Retrieve a list of snapshots",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/rest/applications/{{a:application}}/request-snapshots?time-range-type={{t:time_range_type}}&duration-in-mins={{d:duration_in_minutes?}}&start-time={{b:start_time?}}&end-time={{f:end_time?}}&need-props=true&need-exit-calls=true",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","rest","applications","{{application}}","request-snapshots"],
              "query": [{"key": "time-range-type","value": "{{time_range_type}}"},{"key":"duration-in-mins","value": "{{duration_in_minutes}}"},{"key":"start-time","value": "{{start_time}}"},{"key":"end-time","value": "{{end_time}}"},{"key":"need-props","value": "true"},{"key":"need-exit-calls","value": "true"}]
						},
            "description": "Provide an application (-a) as parameter, as well as a time range (-t), the duration in minutes (-d) or start (-b) and end time (-f)"
					}
				}]},{"name": "synthetic","item": [{
					"name": "Import a synthetic job.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{{synthetic_job}}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/synthetic/schedule/{{a:application}}/updateSchedule",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","synthetic","schedule","{{application}}","updateSchedule"],
              "query": []
						},
            "description": "Provide an EUM application id (-a) as parameter and a json string or a file (with @ as prefix) as parameter (-d)"
					}
				},{
					"name": "List all synthetic jobs.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/synthetic/schedule/getJobList/{{a:application}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","synthetic","schedule","getJobList","{{application}}"],
              "query": []
						},
            "description": "Provide an EUM application id (-a) as parameter."
					}
				},{
					"name": "Generate synthetic snapshot.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{\"url\":\"{{url}}\",\"location\":\"{{location}}\",\"browser\":\"{{browser}}\",\"applicationId\":{{application}},\"timeRangeString\":null,\"timeoutSeconds\":30,\"script\":null}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/synthetic/launch/generateLoad",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","synthetic","launch","generateLoad"],
              "query": []
						},
            "description": "Provide an EUM application (-a), a brower (-b) and an URL (-u) as parameter."
					}
				},{
					"name": "Update a synthetic job.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": "{{synthetic_job}}"
						},
						"url": {
							"raw": "{{controller_host}}/controller/restui/synthetic/schedule/{{a:application}}/updateScheduleBatch",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","restui","synthetic","schedule","{{application}}","updateScheduleBatch"],
              "query": []
						},
            "description": "Provide an EUM application id (-a) as parameter and a json string or a file (with @ as prefix) as parameter (-d)"
					}
				}]},{"name": "tier","item": [{
					"name": "Get a tier.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/rest/applications/{{a:application}}/tiers/{{t:tier}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","rest","applications","{{application}}","tiers","{{tier}}"],
              "query": []
						},
            "description": "Provide the application (-a) and the tier (-t) as parameters"
					}
				},{
					"name": "List all tiers for a given application.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/rest/applications/{{a:application}}/tiers",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","rest","applications","{{application}}","tiers"],
              "query": []
						},
            "description": "Provide the application id as parameter (-a)."
					}
				},{
					"name": "List nodes for a tier.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/rest/applications/{{a:application}}/tiers/{{t:tier}}/nodes",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","rest","applications","{{application}}","tiers","{{tier}}","nodes"],
              "query": []
						},
            "description": "Provide the application (-a) and the tier (-t) as parameters"
					}
				}]},{"name": "transactiondetection","item": [{
					"name": "Export transaction detection rules.",
					"request": {
						"method": "GET",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/transactiondetection/{{a:application}}/{{r:ruletype}}/{{e:entrypointtype?}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","transactiondetection","{{application}}","{{ruletype}}","{{entrypointtype}}"],
              "query": []
						},
            "description": "Provide the application (-a) and the rule type (-r) as parameters. Provide an entry point type (-e) as optional parameter."
					}
				},{
					"name": "Import transaction detection rules.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/transactiondetection/{{a:application}}/{{r:ruletype}}/{{e:entrypointtype?}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","transactiondetection","{{application}}","{{ruletype}}","{{entrypointtype}}"],
              "query": []
						},
            "description": "Provide the application (-a), the rule type (-r) and an xml file (with @ as prefix) containing the rules (-d) as parameters. Provide an entry point type (-e) as optional parameter."
					}
				}]},{"name": "user","item": [{
					"name": "Create a new user.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/rest/users?user-name={{n:user_name}}&user-display-name={{d:user_display_name}}&user-password={{p:user_password}}&user-email={{m:user_mail}}&user-roles={{r:user_roles?}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","rest","users"],
              "query": [{"key": "user-name","value": "{{user_name}}"},{"key":"user-display-name","value": "{{user_display_name}}"},{"key":"user-password","value": "{{user_password}}"},{"key":"user-email","value": "{{user_mail}}"},{"key":"user-roles","value": "{{user_roles}}"}]
						},
            "description": "Provide a name (-n), a display name (-d), a list of roles (-r), a password (-p) and a mail address (-m) as parameters."
					}
				},{
					"name": "Update an existing user.",
					"request": {
						"method": "POST",
						"header": [
              {
								"key": "Content-Type",
								"value": "application/json;charset=UTF-8",
								"type": "text"
							},
              {
								"key": "X-CSRF-TOKEN",
								"value": "{{X-CSRF-TOKEN}}",
								"type": "text"
							}
            ],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{controller_host}}/controller/rest/users?user-id={{i:user_id}}&user-name={{n:user_name}}&user-display-name={{d:user_display_name}}&user-password={{p:user_password?}}&user-email={{m:user_mail}}&user-roles={{r:user_roles?}}",
              "host": [
								"{{controller_host}}"
							],
							"path": ["controller","rest","users"],
              "query": [{"key": "user-id","value": "{{user_id}}"},{"key":"user-name","value": "{{user_name}}"},{"key":"user-display-name","value": "{{user_display_name}}"},{"key":"user-password","value": "{{user_password}}"},{"key":"user-email","value": "{{user_mail}}"},{"key":"user-roles","value": "{{user_roles}}"}]
						},
            "description": "Provide an id (-i), name (-n), a display name (-d), a list of roles (-r), a password (-p) and a mail address (-m) as parameters."
					}
				}]}]
}